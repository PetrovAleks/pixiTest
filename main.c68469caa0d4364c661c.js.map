{"version":3,"sources":["webpack:///./refs/index.js","webpack:///./refs/refs.js","webpack:///./app/app.js","webpack:///./scripts/randomShapes.js","webpack:///./scripts/scripts.js","webpack:///./index.js"],"names":["refs","div","document","querySelector","interfaceValueCurrentNumber","interfaceValueSurfaceArea","btnShapesNumber","btnGravitiValue","interfaceValueNumberSecond","interfaceValueGraviti","app","PIXI","width","height","backgroundColor","Shapes","randomShapes","randomColor","x","y","this","shapes","lineStyle","beginFill","endFill","interactive","buttonMode","surfaceArea","stage","addChild","counterShapes","surfaceAreaValue","NewRandomShapes","position","destroyShapes","setDestroy","innerHTML","Math","floor","destroy","clearInterval","loweringShapes","setInterval","gravitiValue","on","e","addEventListener","dataAction","target","dataset","action","shapesPerSec","createShapes","pisition","setRandomShapes","setRandomColor","randomIndex","random","PI","drawEllipse","pow","drawCircle","drawStar","drawRect","drawPolygon","color","i","appendChild","view","bgshapes","data","global"],"mappings":"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","file":"main.c68469caa0d4364c661c.js","sourcesContent":["import refs from './refs';\r\nexport default refs;\r\n","const refs = {\r\n  div: document.querySelector('.view'),\r\n  interfaceValueCurrentNumber: document.querySelector('.value__current-number'),\r\n  interfaceValueSurfaceArea: document.querySelector('.value__surface-area'),\r\n  btnShapesNumber: document.querySelector('.shapes-number'),\r\n  btnGravitiValue: document.querySelector('.graviti-value'),\r\n  interfaceValueNumberSecond: document.querySelector(\r\n    '[data-name=\"number-second\"]',\r\n  ),\r\n  interfaceValueGraviti: document.querySelector('[data-name=\"graviti-value\"]'),\r\n};\r\n\r\nexport default refs;\r\n","import * as PIXI from 'pixi.js';\r\nimport './app.css';\r\nimport refs from '../refs';\r\nconst { div } = refs;\r\nconst app = new PIXI.Application({\r\n  width: 1100,\r\n  height: 400,\r\n  backgroundColor: 0x4e3030,\r\n});\r\n\r\nclass App {\r\n  constructor() {\r\n    this.bgshapes = new PIXI.Graphics();\r\n    this.bgshapes.lineStyle(0, 0xffffff, 1);\r\n    this.bgshapes.beginFill(0, 0xffffff, 1);\r\n    this.bgshapes.drawRect(0, 0, 1100, 400);\r\n    this.bgshapes.endFill();\r\n    app.stage.addChild(this.bgshapes);\r\n    this.bgshapes.interactive = true;\r\n  }\r\n  doc = div.appendChild(app.view);\r\n}\r\nclass Shapes {\r\n  constructor({ x, y }, randomShapes, randomColor) {\r\n    this.shapes = new PIXI.Graphics();\r\n    this.shapes.lineStyle(0, 0xffffff, 1);\r\n    this.shapes.beginFill(randomColor());\r\n    randomShapes(this.shapes);\r\n    this.shapes.endFill();\r\n    this.shapes.x = x;\r\n    this.shapes.y = y;\r\n    this.shapes.interactive = true;\r\n    this.shapes.buttonMode = true;\r\n    this.shapes.surfaceArea;\r\n    app.stage.addChild(this.shapes);\r\n  }\r\n}\r\nexport { App, Shapes };\r\n","import { Shapes } from '../app';\r\nimport { gravitiValue } from './scripts';\r\nimport refs from '../refs';\r\nconst { interfaceValueCurrentNumber, interfaceValueSurfaceArea } = refs;\r\nlet counterShapes = 0;\r\n\r\nlet surfaceAreaValue = 0;\r\n\r\nexport default class NewRandomShapes extends Shapes {\r\n  constructor(position, randomShapes, randomColor) {\r\n    super(position, randomShapes, randomColor);\r\n  }\r\n\r\n  destroyShapes(setDestroy) {\r\n    interfaceValueCurrentNumber.innerHTML = counterShapes -= 1;\r\n    surfaceAreaValue = surfaceAreaValue - this.shapes.surfaceArea;\r\n    interfaceValueSurfaceArea.innerHTML = Math.floor(surfaceAreaValue);\r\n    this.shapes.destroy(true);\r\n    clearInterval(setDestroy);\r\n  }\r\n\r\n  loweringShapes() {\r\n    interfaceValueCurrentNumber.innerHTML = counterShapes += 1;\r\n    surfaceAreaValue = surfaceAreaValue + this.shapes.surfaceArea;\r\n    interfaceValueSurfaceArea.innerHTML = Math.floor(surfaceAreaValue);\r\n\r\n    const setDestroy = setInterval(() => {\r\n      this.shapes.y = this.shapes.y + gravitiValue;\r\n\r\n      if (this.shapes.y > 500) {\r\n        this.destroyShapes(setDestroy);\r\n      }\r\n    }, 50);\r\n    this.shapes.on('click', e => {\r\n      this.destroyShapes(setDestroy);\r\n    });\r\n  }\r\n}\r\n","import refs from '../refs';\r\nimport NewRandomShapes from './randomShapes';\r\n\r\nconst {\r\n  btnShapesNumber,\r\n  interfaceValueNumberSecond,\r\n  btnGravitiValue,\r\n  interfaceValueGraviti,\r\n} = refs;\r\n\r\nbtnShapesNumber.addEventListener('click', setShapesPerSec);\r\nbtnGravitiValue.addEventListener('click', setGravitiValue);\r\n\r\nlet shapesPerSec = 1;\r\nlet gravitiValue = 1;\r\n\r\nfunction createShapes(pisition) {\r\n  const newShapes = new NewRandomShapes(\r\n    pisition,\r\n    setRandomShapes,\r\n    setRandomColor,\r\n  );\r\n\r\n  return newShapes.loweringShapes();\r\n}\r\n\r\nfunction setRandomShapes(shapes) {\r\n  const randomIndex = Math.floor(Math.random() * (7 - 1 + 1)) + 1;\r\n  if (randomIndex === 1) {\r\n    const ellipseWidth = 50;\r\n    const ellipseHeight = 20;\r\n    shapes.surfaceArea = Math.PI * ellipseWidth * ellipseHeight;\r\n\r\n    return shapes.drawEllipse(0, 0, ellipseWidth, ellipseHeight);\r\n  }\r\n  if (randomIndex === 2) {\r\n    const RCircle = 32;\r\n\r\n    shapes.surfaceArea = Math.PI * Math.pow(RCircle, 2);\r\n    return shapes.drawCircle(0, 0, RCircle);\r\n  }\r\n  if (randomIndex === 3) {\r\n    const RCircle = 60;\r\n    shapes.surfaceArea = 1.12 * Math.pow(RCircle, 2);\r\n    return shapes.drawStar(0, 0, 5, 60);\r\n  }\r\n  if (randomIndex === 4) {\r\n    const rectSize = 50;\r\n\r\n    shapes.surfaceArea = Math.pow(rectSize, 2);\r\n    return shapes.drawRect(0, 0, rectSize, rectSize);\r\n  }\r\n  if (randomIndex === 5) {\r\n    shapes.surfaceArea = (64 * 64) / 2;\r\n    return shapes.drawPolygon([-32, 64, 32, 64, 0, 0]);\r\n  }\r\n  if (randomIndex === 6) {\r\n    shapes.surfaceArea = (32 * 32) / 2 + Math.pow(32, 2);\r\n    return shapes.drawPolygon([-32, 32, 32, 32, 32, -32, -32, -32, -64, 0]);\r\n  }\r\n  if (randomIndex === 7) {\r\n    shapes.surfaceArea = (32 * 32) / 2 + Math.pow(32, 2) + (32 * 32) / 2;\r\n    return shapes.drawPolygon([\r\n      -64,\r\n      0,\r\n      -32,\r\n      32,\r\n      32,\r\n      32,\r\n      64,\r\n      0,\r\n      32,\r\n      -32,\r\n      -32,\r\n      -32,\r\n    ]);\r\n  }\r\n}\r\n\r\nfunction setRandomColor() {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '0x';\r\n  for (let i = 0; i < 6; i += 1) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction setRandomPosition() {\r\n  const randomPositionX = Math.floor(Math.random() * 800);\r\n  const startPosition = {\r\n    x: 200 + randomPositionX,\r\n    y: -50,\r\n  };\r\n  return startPosition;\r\n}\r\n\r\nfunction setShapesPerSec(e) {\r\n  const dataAction = e.target.dataset.action;\r\n\r\n  if (dataAction === 'shapes-number__increment') {\r\n    shapesPerSec += 1;\r\n  }\r\n  if (dataAction === 'shapes-number__decrement') {\r\n    if (shapesPerSec === 0) {\r\n      return;\r\n    }\r\n    shapesPerSec -= 1;\r\n  }\r\n  return (interfaceValueNumberSecond.innerHTML = shapesPerSec);\r\n}\r\n\r\nfunction setGravitiValue(e) {\r\n  const dataAction = e.target.dataset.action;\r\n\r\n  if (dataAction === 'gravity-value__increment') {\r\n    gravitiValue += 1;\r\n  }\r\n  if (dataAction === 'gravity-value__decrement') {\r\n    if (gravitiValue === 1) {\r\n      return;\r\n    }\r\n    gravitiValue -= 1;\r\n  }\r\n  return (interfaceValueGraviti.innerHTML = gravitiValue);\r\n}\r\n\r\nexport {\r\n  setRandomShapes,\r\n  setRandomColor,\r\n  setRandomPosition,\r\n  createShapes,\r\n  shapesPerSec,\r\n  gravitiValue,\r\n};\r\n","import { App } from './app';\nimport refs from './refs';\n\nimport './styles.css';\n\nimport {\n  setRandomShapes,\n  setRandomColor,\n  setRandomPosition,\n  createShapes,\n  shapesPerSec,\n} from './scripts';\n\nconst app = new App();\n\napp.bgshapes.on('click', e => {\n  const position = e.data.global;\n  createShapes(position);\n});\n\nsetInterval(() => {\n  for (let i = 1; i <= shapesPerSec; i += 1) {\n    createShapes(setRandomPosition());\n  }\n}, 1000);\n"],"sourceRoot":""}