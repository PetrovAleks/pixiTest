{"version":3,"sources":["webpack:///./refs/index.js","webpack:///./refs/refs.js","webpack:///./AppModel.js","webpack:///./AppView.js","webpack:///./AppController.js","webpack:///./index.js"],"names":["refs","div","document","querySelector","interfaceValueCurrentNumber","interfaceValueSurfaceArea","btnShapesNumber","btnGravitiValue","interfaceValueNumberSecond","interfaceValueGraviti","AppModel","App","SIZE","this","app","APP_SIZE","shapesPerSec","gravitiValue","counterShapes","surfaceAreaValue","createShape","x","y","shape","PIXI","lineStyle","beginFill","getRandomColor","setRandomShapes","endFill","interactive","buttonMode","show","stage","addChild","getRandomPosition","min","max","Math","floor","random","color","i","name","surfaceArea","PI","drawCircle","drawEllipse","pow","drawStar","drawRect","drawPolygon","setGravityValue","evt","target","dataset","action","setNumberShapes","initStageBackground","BOARD_WIDTH","BOARD_HEUGHT","backGroundApp","destroyShape","MAX_SHAPE_SIZE","position","clear","showCurrentShapes","showValueSurfaceArea","onCLickRedrawShapes","on","toChange–°olor","parent","children","forEach","element","showGravitiValue","innerHTML","showNumberShapeSecond","AppView","modelApp","model","start","setInterval","drawShapes","coords","renderShape","ticker","add","AppController","appModel","appView","view","background","onCLickCreateShape","initListeners","console","dir","addEventListener","data","global","width","height","backgroundColor","appendChild"],"mappings":"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","file":"main.7a3ebf57fa7dc648f809.js","sourcesContent":["import refs from './refs';\r\nexport default refs;\r\n","const refs = {\r\n  div: document.querySelector('.view'),\r\n  interfaceValueCurrentNumber: document.querySelector('.value__current-number'),\r\n  interfaceValueSurfaceArea: document.querySelector('.value__surface-area'),\r\n  btnShapesNumber: document.querySelector('.shapes-number'),\r\n  btnGravitiValue: document.querySelector('.graviti-value'),\r\n  interfaceValueNumberSecond: document.querySelector(\r\n    '[data-name=\"number-second\"]',\r\n  ),\r\n  interfaceValueGraviti: document.querySelector('[data-name=\"graviti-value\"]'),\r\n};\r\n\r\nexport default refs;\r\n","import * as PIXI from 'pixi.js';\r\nimport refs from './refs';\r\nconst {\r\n  interfaceValueCurrentNumber,\r\n  interfaceValueSurfaceArea,\r\n  interfaceValueNumberSecond,\r\n  interfaceValueGraviti,\r\n} = refs;\r\n\r\nconst SHAPES_INCREMENT = 'shapes-number__increment';\r\nconst SHAPES_DECREMENT = 'shapes-number__decrement';\r\nconst GRAVITI_INCREMENT = 'gravity-value__increment';\r\nconst GRAVITI_DECREMENT = 'gravity-value__decrement';\r\n\r\nexport default class AppModel {\r\n  shapesPerSec = 1;\r\n  gravitiValue = 1;\r\n  counterShapes = 0;\r\n  surfaceAreaValue = 0;\r\n  app = null;\r\n  APP_SIZE = null;\r\n\r\n  constructor(App, SIZE) {\r\n    this.app = App;\r\n    this.APP_SIZE = SIZE;\r\n    this.shapesPerSec;\r\n    this.gravitiValue;\r\n    this.counterShapes;\r\n    this.surfaceAreaValue;\r\n  }\r\n\r\n  createShape({ x, y }) {\r\n    const shape = new PIXI.Graphics();\r\n\r\n    shape.lineStyle(0, 0xffffff, 1);\r\n\r\n    shape.beginFill(this.getRandomColor());\r\n    this.setRandomShapes(shape);\r\n    shape.endFill();\r\n    shape.x = x;\r\n    shape.y = y;\r\n    shape.interactive = true;\r\n    shape.buttonMode = true;\r\n    shape.show = true;\r\n    return this.app.stage.addChild(shape);\r\n  }\r\n\r\n  getRandomPosition(min, max) {\r\n    const randomPositionX = Math.floor(Math.random() * max);\r\n    const startPosition = {\r\n      x: min + randomPositionX,\r\n      y: 0,\r\n    };\r\n    return startPosition;\r\n  }\r\n\r\n  getRandomColor() {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '0x';\r\n    for (let i = 0; i < 6; i += 1) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  setRandomShapes(shape) {\r\n    const randomIndex = Math.floor(Math.random() * (7 - 1) + 1);\r\n\r\n    switch (randomIndex) {\r\n      case 1:\r\n        shape.name = 'circle';\r\n        shape.surfaceArea = 2 * Math.PI * 32;\r\n        return shape.drawCircle(0, 0, 32);\r\n      case 2:\r\n        shape.name = 'ellipse';\r\n        shape.surfaceArea = 2 * Math.PI * 50;\r\n        return shape.drawEllipse(0, 0, 50, 25);\r\n      case 3:\r\n        const RCircle = 60;\r\n        shape.name = 'star';\r\n        shape.surfaceArea = 1.12 * Math.pow(RCircle, 2);\r\n        return shape.drawStar(0, 0, 5, 60);\r\n      case 4:\r\n        const rectSize = 50;\r\n        shape.name = 'rect';\r\n        shape.surfaceArea = Math.pow(rectSize, 2);\r\n        return shape.drawRect(0, 0, rectSize, rectSize);\r\n      case 5:\r\n        shape.name = 'triangle';\r\n        shape.surfaceArea = (64 * 64) / 2;\r\n        return shape.drawPolygon([-32, 64, 32, 64, 0, 0]);\r\n      case 6:\r\n        shape.name = 'pentagon';\r\n        shape.surfaceArea = (32 * 32) / 2 + Math.pow(32, 2);\r\n        return shape.drawPolygon([-32, 32, 32, 32, 32, -32, -32, -32, -64, 0]);\r\n      case 7:\r\n        shape.name = 'hexagon';\r\n        shape.surfaceArea = (32 * 32) / 2 + Math.pow(32, 2) + (32 * 32) / 2;\r\n        return shape.drawPolygon([\r\n          -64,\r\n          0,\r\n          -32,\r\n          32,\r\n          32,\r\n          32,\r\n          64,\r\n          0,\r\n          32,\r\n          -32,\r\n          -32,\r\n          -32,\r\n        ]);\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  setGravityValue(evt) {\r\n    if (evt.target.dataset.action === GRAVITI_INCREMENT) {\r\n      this.gravitiValue += 1;\r\n    }\r\n    if (\r\n      evt.target.dataset.action === GRAVITI_DECREMENT &&\r\n      this.gravitiValue > 1\r\n    ) {\r\n      this.gravitiValue -= 1;\r\n    }\r\n  }\r\n  setNumberShapes(evt) {\r\n    if (evt.target.dataset.action === SHAPES_INCREMENT) {\r\n      this.shapesPerSec += 1;\r\n    }\r\n    if (\r\n      evt.target?.dataset?.action === SHAPES_DECREMENT &&\r\n      this.shapesPerSec > 1\r\n    ) {\r\n      this.shapesPerSec -= 1;\r\n    }\r\n  }\r\n\r\n  initStageBackground() {\r\n    const { BOARD_WIDTH, BOARD_HEUGHT } = this.APP_SIZE;\r\n    const backGroundApp = new PIXI.Graphics();\r\n    backGroundApp.lineStyle(0, 0xffffff, 1);\r\n    backGroundApp.beginFill(0, 0xffffff, 1);\r\n    backGroundApp.drawRect(0, 0, BOARD_WIDTH, BOARD_HEUGHT);\r\n    backGroundApp.endFill();\r\n\r\n    backGroundApp.interactive = true;\r\n\r\n    return this.app.stage.addChild(backGroundApp);\r\n  }\r\n\r\n  destroyShape(shape) {\r\n    const { BOARD_WIDTH, BOARD_HEUGHT, MAX_SHAPE_SIZE } = this.APP_SIZE;\r\n    if (shape.position.y > BOARD_HEUGHT + MAX_SHAPE_SIZE) {\r\n      shape.clear();\r\n    }\r\n    if (shape.position.y === BOARD_HEUGHT + MAX_SHAPE_SIZE) {\r\n      this.counterShapes -= 1;\r\n      this.surfaceAreaValue -= shape.surfaceArea;\r\n\r\n      this.showCurrentShapes();\r\n      this.showValueSurfaceArea();\r\n    }\r\n  }\r\n\r\n  onCLickRedrawShapes(shape) {\r\n    shape.on('click', () => {\r\n      shape.show = false;\r\n      this.toChange–°olor(shape, shape.name);\r\n      this.counterShapes -= 1;\r\n      this.surfaceAreaValue -= shape.surfaceArea;\r\n\r\n      this.showCurrentShapes();\r\n      this.showValueSurfaceArea();\r\n      shape.clear();\r\n    });\r\n  }\r\n\r\n  toChange–°olor(shape, name) {\r\n    const { BOARD_HEUGHT } = this.APP_SIZE;\r\n    shape.parent.children.forEach(element => {\r\n      if (\r\n        element.name === name &&\r\n        element.show &&\r\n        element.y <= BOARD_HEUGHT + 50\r\n      ) {\r\n        element.clear();\r\n\r\n        element.beginFill(this.getRandomColor());\r\n        switch (name) {\r\n          case 'circle':\r\n            return element.drawCircle(0, 0, 32);\r\n          case 'ellipse':\r\n            return element.drawEllipse(0, 0, 50, 25);\r\n          case 'star':\r\n            return element.drawStar(0, 0, 5, 60);\r\n          case 'rect':\r\n            return element.drawRect(0, 0, 50, 50);\r\n          case 'triangle':\r\n            return element.drawPolygon([-32, 64, 32, 64, 0, 0]);\r\n          case 'pentagon':\r\n            return element.drawPolygon([\r\n              -32,\r\n              32,\r\n              32,\r\n              32,\r\n              32,\r\n              -32,\r\n              -32,\r\n              -32,\r\n              -64,\r\n              0,\r\n            ]);\r\n          case 'hexagon':\r\n            return element.drawPolygon([\r\n              -64,\r\n              0,\r\n              -32,\r\n              32,\r\n              32,\r\n              32,\r\n              64,\r\n              0,\r\n              32,\r\n              -32,\r\n              -32,\r\n              -32,\r\n            ]);\r\n\r\n          default:\r\n            break;\r\n        }\r\n\r\n        element.endFill();\r\n        this.app.stage.addChild(element);\r\n      }\r\n    });\r\n  }\r\n\r\n  showGravitiValue() {\r\n    interfaceValueGraviti.innerHTML = this.gravitiValue;\r\n  }\r\n  showNumberShapeSecond() {\r\n    interfaceValueNumberSecond.innerHTML = this.shapesPerSec;\r\n  }\r\n  showCurrentShapes() {\r\n    interfaceValueCurrentNumber.innerHTML = this.counterShapes;\r\n  }\r\n  showValueSurfaceArea() {\r\n    interfaceValueSurfaceArea.innerHTML = Math.floor(this.surfaceAreaValue);\r\n  }\r\n}\r\n","export default class AppView {\r\n  model = null;\r\n\r\n  constructor(modelApp) {\r\n    this.model = modelApp;\r\n\r\n    this.start();\r\n  }\r\n\r\n  start() {\r\n    setInterval(() => this.drawShapes(), 1000);\r\n  }\r\n  drawShapes() {\r\n    const { MAX_SHAPE_SIZE, BOARD_WIDTH } = this.model.APP_SIZE;\r\n    for (let i = 1; i <= this.model.shapesPerSec; i += 1) {\r\n      const coords = this.model.getRandomPosition(\r\n        MAX_SHAPE_SIZE,\r\n        BOARD_WIDTH - MAX_SHAPE_SIZE,\r\n      );\r\n      this.renderShape(coords);\r\n    }\r\n  }\r\n  renderShape(coords) {\r\n    const shape = this.model.createShape(coords);\r\n    this.model.onCLickRedrawShapes(shape);\r\n\r\n    this.model.app.ticker.add(() => {\r\n      shape.y += this.model.gravitiValue;\r\n      this.model.destroyShape(shape);\r\n    });\r\n\r\n    this.model.counterShapes += 1;\r\n    this.model.surfaceAreaValue += shape.surfaceArea;\r\n\r\n    this.model.showValueSurfaceArea();\r\n    this.model.showCurrentShapes();\r\n    this.model.showNumberShapeSecond();\r\n    this.model.showGravitiValue();\r\n  }\r\n}\r\n","import refs from './refs';\r\n\r\nconst { btnShapesNumber, btnGravitiValue } = refs;\r\n\r\nexport default class AppController {\r\n  model = null;\r\n  background = null;\r\n  view = null;\r\n  constructor(appModel, appView) {\r\n    this.model = appModel;\r\n    this.view = appView;\r\n    this.background = this.model.initStageBackground();\r\n    this.onCLickCreateShape();\r\n    this.initListeners();\r\n\r\n    console.dir(this.background);\r\n  }\r\n  initListeners() {\r\n    btnShapesNumber.addEventListener('click', evt => {\r\n      this.model.setNumberShapes(evt);\r\n    });\r\n    btnGravitiValue.addEventListener('click', evt => {\r\n      this.model.setGravityValue(evt);\r\n    });\r\n  }\r\n  onCLickCreateShape() {\r\n    this.background.on('click', evt => this.view.renderShape(evt.data?.global));\r\n  }\r\n}\r\n","import * as PIXI from 'pixi.js';\nimport './styles.css';\n\nimport AppModel from './AppModel';\nimport AppView from './AppView';\nimport AppController from './AppController';\nimport refs from './refs';\n\nconst { div } = refs;\n\nconst APP_SIZE = {\n  BOARD_WIDTH: 1100,\n  BOARD_HEUGHT: 400,\n  MAX_SHAPE_SIZE: 50,\n};\nconst app = new PIXI.Application({\n  width: APP_SIZE.BOARD_WIDTH,\n  height: APP_SIZE.BOARD_HEUGHT,\n  backgroundColor: 0x4e3030,\n});\n\ndiv.appendChild(app.view);\n\nconst model = new AppModel(app, APP_SIZE),\n  view = new AppView(model),\n  controller = new AppController(model, view);\n"],"sourceRoot":""}