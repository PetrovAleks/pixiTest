{"version":3,"sources":["webpack:///./refs/index.js","webpack:///./refs/refs.js","webpack:///./scripts/scripts.js","webpack:///./scripts/ShapeMethods.js","webpack:///./app/app.js","webpack:///./index.js"],"names":["refs","div","document","querySelector","interfaceValueCurrentNumber","interfaceValueSurfaceArea","btnShapesNumber","btnGravitiValue","interfaceValueNumberSecond","interfaceValueGraviti","addEventListener","e","dataAction","target","dataset","action","shapesPerSec","innerHTML","gravitiValue","counterShapes","surfaceAreaValue","ShapeMethods","destroyShapes","setDestroy","this","shapes","surfaceArea","Math","floor","destroy","clearInterval","loweringShapes","setInterval","y","on","setRandomColor","color","i","random","setRandomShapes","randomIndex","PI","drawEllipse","pow","drawCircle","drawStar","drawRect","drawPolygon","app","PIXI","width","height","backgroundColor","App","createApp","appendChild","view","createBackBackground","bgshapes","lineStyle","beginFill","endFill","stage","addChild","interactive","Shapes","x","buttonMode","position","data","global"],"mappings":"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","file":"main.fb26bb81d1ba7219966b.js","sourcesContent":["import refs from './refs';\r\nexport default refs;\r\n","const refs = {\r\n  div: document.querySelector('.view'),\r\n  interfaceValueCurrentNumber: document.querySelector('.value__current-number'),\r\n  interfaceValueSurfaceArea: document.querySelector('.value__surface-area'),\r\n  btnShapesNumber: document.querySelector('.shapes-number'),\r\n  btnGravitiValue: document.querySelector('.graviti-value'),\r\n  interfaceValueNumberSecond: document.querySelector(\r\n    '[data-name=\"number-second\"]',\r\n  ),\r\n  interfaceValueGraviti: document.querySelector('[data-name=\"graviti-value\"]'),\r\n};\r\n\r\nexport default refs;\r\n","import refs from '../refs';\r\n\r\nconst {\r\n  btnShapesNumber,\r\n  interfaceValueNumberSecond,\r\n  btnGravitiValue,\r\n  interfaceValueGraviti,\r\n} = refs;\r\n\r\nbtnShapesNumber.addEventListener('click', setShapesPerSec);\r\nbtnGravitiValue.addEventListener('click', setGravitiValue);\r\n\r\nlet shapesPerSec = 1;\r\nlet gravitiValue = 1;\r\n\r\nfunction setRandomPosition() {\r\n  const randomPositionX = Math.floor(Math.random() * 800);\r\n  const startPosition = {\r\n    x: 200 + randomPositionX,\r\n    y: -50,\r\n  };\r\n  return startPosition;\r\n}\r\n\r\nfunction setShapesPerSec(e) {\r\n  const dataAction = e.target.dataset.action;\r\n\r\n  if (dataAction === 'shapes-number__increment') {\r\n    shapesPerSec += 1;\r\n  }\r\n  if (dataAction === 'shapes-number__decrement') {\r\n    if (shapesPerSec === 0) {\r\n      return;\r\n    }\r\n    shapesPerSec -= 1;\r\n  }\r\n  return (interfaceValueNumberSecond.innerHTML = shapesPerSec);\r\n}\r\n\r\nfunction setGravitiValue(e) {\r\n  const dataAction = e.target.dataset.action;\r\n\r\n  if (dataAction === 'gravity-value__increment') {\r\n    gravitiValue += 1;\r\n  }\r\n  if (dataAction === 'gravity-value__decrement') {\r\n    if (gravitiValue === 1) {\r\n      return;\r\n    }\r\n    gravitiValue -= 1;\r\n  }\r\n  return (interfaceValueGraviti.innerHTML = gravitiValue);\r\n}\r\n\r\nexport { setRandomPosition, shapesPerSec, gravitiValue };\r\n","import { gravitiValue } from './scripts';\r\nimport refs from '../refs';\r\nconst { interfaceValueCurrentNumber, interfaceValueSurfaceArea } = refs;\r\nlet counterShapes = 0;\r\nlet surfaceAreaValue = 0;\r\n\r\nexport default class ShapeMethods {\r\n  destroyShapes(setDestroy) {\r\n    interfaceValueCurrentNumber.innerHTML = counterShapes -= 1;\r\n    surfaceAreaValue = surfaceAreaValue - this.shapes.surfaceArea;\r\n    interfaceValueSurfaceArea.innerHTML = Math.floor(surfaceAreaValue);\r\n    this.shapes.destroy(true);\r\n    clearInterval(setDestroy);\r\n  }\r\n\r\n  loweringShapes() {\r\n    interfaceValueCurrentNumber.innerHTML = counterShapes += 1;\r\n    surfaceAreaValue = surfaceAreaValue + this.shapes.surfaceArea;\r\n    interfaceValueSurfaceArea.innerHTML = Math.floor(surfaceAreaValue);\r\n\r\n    const setDestroy = setInterval(() => {\r\n      this.shapes.y = this.shapes.y + gravitiValue;\r\n\r\n      if (this.shapes.y > 500) {\r\n        this.destroyShapes(setDestroy);\r\n      }\r\n    }, 50);\r\n    this.shapes.on('click', e => {\r\n      this.destroyShapes(setDestroy);\r\n    });\r\n  }\r\n\r\n  setRandomColor() {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '0x';\r\n    for (let i = 0; i < 6; i += 1) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n  setRandomShapes() {\r\n    const randomIndex = Math.floor(Math.random() * (7 - 1 + 1)) + 1;\r\n    if (randomIndex === 1) {\r\n      const ellipseWidth = 50;\r\n      const ellipseHeight = 20;\r\n      this.shapes.surfaceArea = Math.PI * ellipseWidth * ellipseHeight;\r\n\r\n      return this.shapes.drawEllipse(0, 0, ellipseWidth, ellipseHeight);\r\n    }\r\n    if (randomIndex === 2) {\r\n      const RCircle = 32;\r\n\r\n      this.shapes.surfaceArea = Math.PI * Math.pow(RCircle, 2);\r\n      return this.shapes.drawCircle(0, 0, RCircle);\r\n    }\r\n    if (randomIndex === 3) {\r\n      const RCircle = 60;\r\n      this.shapes.surfaceArea = 1.12 * Math.pow(RCircle, 2);\r\n      return this.shapes.drawStar(0, 0, 5, 60);\r\n    }\r\n    if (randomIndex === 4) {\r\n      const rectSize = 50;\r\n\r\n      this.shapes.surfaceArea = Math.pow(rectSize, 2);\r\n      return this.shapes.drawRect(0, 0, rectSize, rectSize);\r\n    }\r\n    if (randomIndex === 5) {\r\n      this.shapes.surfaceArea = (64 * 64) / 2;\r\n      return this.shapes.drawPolygon([-32, 64, 32, 64, 0, 0]);\r\n    }\r\n    if (randomIndex === 6) {\r\n      this.shapes.surfaceArea = (32 * 32) / 2 + Math.pow(32, 2);\r\n      return this.shapes.drawPolygon([\r\n        -32,\r\n        32,\r\n        32,\r\n        32,\r\n        32,\r\n        -32,\r\n        -32,\r\n        -32,\r\n        -64,\r\n        0,\r\n      ]);\r\n    }\r\n    if (randomIndex === 7) {\r\n      this.shapes.surfaceArea = (32 * 32) / 2 + Math.pow(32, 2) + (32 * 32) / 2;\r\n      return this.shapes.drawPolygon([\r\n        -64,\r\n        0,\r\n        -32,\r\n        32,\r\n        32,\r\n        32,\r\n        64,\r\n        0,\r\n        32,\r\n        -32,\r\n        -32,\r\n        -32,\r\n      ]);\r\n    }\r\n  }\r\n}\r\n","import * as PIXI from 'pixi.js';\r\nimport { ShapeMethods } from '../scripts';\r\nimport './app.css';\r\nimport refs from '../refs';\r\nconst { div } = refs;\r\nconst app = new PIXI.Application({\r\n  width: 1100,\r\n  height: 400,\r\n  backgroundColor: 0x4e3030,\r\n});\r\n\r\nclass App extends ShapeMethods {\r\n  constructor() {\r\n    super();\r\n  }\r\n  bgshapes = new PIXI.Graphics();\r\n\r\n  createApp() {\r\n    return div.appendChild(app.view);\r\n  }\r\n\r\n  createBackBackground() {\r\n    this.bgshapes.lineStyle(0, 0xffffff, 1);\r\n    this.bgshapes.beginFill(0, 0xffffff, 1);\r\n    this.bgshapes.drawRect(0, 0, 1100, 400);\r\n    this.bgshapes.endFill();\r\n    app.stage.addChild(this.bgshapes);\r\n    this.bgshapes.interactive = true;\r\n  }\r\n}\r\n\r\nclass Shapes extends App {\r\n  constructor({ x, y }) {\r\n    super();\r\n    this.shapes = new PIXI.Graphics();\r\n    this.shapes.lineStyle(0, 0xffffff, 1);\r\n    this.shapes.beginFill(this.setRandomColor());\r\n    this.setRandomShapes();\r\n    this.shapes.endFill();\r\n    this.shapes.x = x;\r\n    this.shapes.y = y;\r\n    this.shapes.interactive = true;\r\n    this.shapes.buttonMode = true;\r\n    this.shapes.surfaceArea;\r\n    app.stage.addChild(this.shapes);\r\n    this.loweringShapes();\r\n  }\r\n}\r\nexport { App, Shapes };\r\n","import { App, Shapes } from './app';\nimport refs from './refs';\n\nimport './styles.css';\n\nimport { setRandomPosition, shapesPerSec } from './scripts';\n\nconst app = new App();\n\napp.createApp();\napp.createBackBackground();\n\napp.bgshapes.on('click', e => {\n  const position = e.data.global;\n  new Shapes(position);\n});\n\nsetInterval(() => {\n  for (let i = 1; i <= shapesPerSec; i += 1) {\n    new Shapes(setRandomPosition());\n  }\n}, 1000);\n"],"sourceRoot":""}